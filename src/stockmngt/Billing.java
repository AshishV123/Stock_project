
package stockmngt;

import java.awt.Image;
import java.awt.print.PageFormat;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static stockmngt.GlobalVariables.path;
import static stockmngt.GlobalVariables.place;
import static stockmngt.GlobalVariables.psw;
import static stockmngt.GlobalVariables.user;

/**
 *
 * @author DELL-PC
 */
public class Billing extends javax.swing.JInternalFrame {
    int flag=0;
    int x=1;
    public static int bill_id=0;
    
    

    /**
     * Creates new form Billing
     */
    public Billing() {
        initComponents();
        
        
         SimpleDateFormat myformat=new SimpleDateFormat("yyyy-MM-dd");
//             mystat.setString(4,myformat.format(jDateChooser1.getDate()));
              
              java.util.Date dataobj=new java.util.Date();
        jDateChooser1.setDate(dataobj);
         //myformat.format(dataobj)
                 try{
         Connection myconnection;
         
        
         myconnection=DriverManager.getConnection(path+place, user, psw);
         try{
             String a="select * from companytable";
             PreparedStatement mystat=myconnection.prepareStatement(a);
            // mystat.setString(1,'%'+jTextField1.getText()+'%');
             ResultSet myresult=mystat.executeQuery();
             
            // DefaultTableModel mymodel=(DefaultTableModel) jTable1.getModel();
             
            // String id,name,post,phone;
             if(myresult.next()){
                
                jComboBox1.removeAllItems();
                jComboBox1.addItem("Choose Company");
                do{
                     jComboBox1.addItem(myresult.getString("name"));
                 }
                 while(myresult.next());
                 
                 
                 
             }   
             else
             {
              JOptionPane.showMessageDialog(rootPane,"Nothing in Stock");   
             }
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(rootPane,"Error in query"+e.getMessage());
         }
         finally{
         myconnection.close();
         
     }
               
     }   
     catch(Exception e)
     {
         JOptionPane.showMessageDialog(rootPane,"Error in Connection"+e.getMessage());
     }
             
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox5 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Company First", " ", " " }));
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Billing");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Bill_ID");

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setText("BILL");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Date");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Customer_Name");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Mobile No.");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jButton1.setText("ADD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("REMOVE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S. No.", "Item_ID", "Name", "Price", "Quantity", "GST", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setText("Calculate Bill");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("NET  TOTAL");

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton4.setText("SAVE");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton5.setText("PRINT BILL");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Quantity");

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Company" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Company First", " ", " " }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Product First" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jButton6.setText("Cancel Bill");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("NEW >>");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(77, 77, 77)
                                .addComponent(jLabel1)
                                .addGap(27, 27, 27)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.Alignment.LEADING, 0, 176, Short.MAX_VALUE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)))
                .addGap(61, 61, 61))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(332, 332, 332))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(310, 310, 310)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(94, 94, 94)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addGap(53, 53, 53)
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField4)
                                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE))))))
                .addGap(32, 32, 32))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton6)
                            .addComponent(jButton5)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 749, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addGap(6, 6, 6)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel1)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel3))
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jLabel6)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton6)
                            .addComponent(jButton7))
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      
        if(jComboBox1.getSelectedIndex()>0&&jComboBox2.getSelectedIndex()>0&&jComboBox3.getSelectedIndex()>0&&!jTextField5.getText().equals(""))
        {
            try{
         Connection myconnection;
         
        
         myconnection=DriverManager.getConnection(path+place, user, psw);
         try{
             String a="select * from stocktable where (company=? and product=?) and Name=?";
             PreparedStatement mystat=myconnection.prepareStatement(a);
             mystat.setString(1,jComboBox1.getSelectedItem().toString());
             mystat.setString(2,jComboBox2.getSelectedItem().toString());
             mystat.setString(3,jComboBox3.getSelectedItem().toString());
             ResultSet myresult=mystat.executeQuery();
             
             DefaultTableModel mymodel=(DefaultTableModel) jTable1.getModel();
             
             String id,name,price,quantity,gst;
             int quant,total,g;
             if(myresult.next()){
                 jScrollPane1.setVisible(true);
//getContentPane().revalidate();
//                 mymodel.setRowCount(0);
//                 do{
                     quant=Integer.parseInt(jTextField5.getText());
                     if(quant<=Integer.parseInt(myresult.getString("Item_Quantity")))
                     {  
                     id=myresult.getString("Item_id");
                     name=myresult.getString("product")+"  "+myresult.getString("Name");
                     price=myresult.getString("Price");
                     quantity=jTextField5.getText();
                     gst=myresult.getString("GST");
                     total=quant*Integer.parseInt(price);
                     g=Integer.parseInt(myresult.getString("GST"));
                     total=total+((g*total)/100);
                     
                   //  price=myresult.getString("Price")
                     //jTextField5.setText("");
                     
                     
                     mymodel.addRow(new Object[]{x,id,name,price,quantity,gst,total});
                    
                     String b="insert into bill_details value(?,?,?,?,?,?,?,?)";
            // JOptionPane.showMessageDialog(rootPane,"abceewwwwccc");
             PreparedStatement mystat1=myconnection.prepareStatement(b);
              mystat1.setString(1,Integer.toString(x));
            mystat1.setString(2,jTextField3.getText());
            mystat1.setString(3,jComboBox1.getSelectedItem().toString());
            mystat1.setString(4,jComboBox2.getSelectedItem().toString());
            mystat1.setString(5,jComboBox3.getSelectedItem().toString());
            mystat1.setString(8,price);
            
//              DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();
//             int l=model.getRowCount();
//            
//            
            mystat1.setString(6,jTextField5.getText());
            mystat1.setString(7,myresult.getString("GST"));
            mystat1.executeUpdate();
            x++;
            
                    
                     }
                     else
                     {
                         JOptionPane.showMessageDialog(rootPane,"Stock isn't available enough.....Remaining quantity is "+myresult.getString("Item_Quantity"));
                            
                     }
                 
                 
             }   
             else
             {
              JOptionPane.showMessageDialog(rootPane,"No Data Found");   
             }
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(rootPane,"Error in query"+e.getMessage());
         }
         finally{
         myconnection.close();
         
     }
               
     }   
     catch(Exception e)
     {
         JOptionPane.showMessageDialog(rootPane,"Error in Connection"+e.getMessage());
     }
             
        
        
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Enter Details First");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();

   int l=model.getRowCount();
   int sum=0;
   for(int h=0;h<l;h++)
   {
       sum+=(Integer.parseInt(jTable1.getValueAt(h, 6).toString()));
   }
   
   jTextField4.setText(Integer.toString(sum));
   
        




    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        flag=1;
        
        
        if(jTextField4.getText().equals(""))
        {
           JOptionPane.showMessageDialog(rootPane,"Calculate Bill First");
            
            
         
        }
        else
        {
            
                try{
         Connection myconnection;
         
        
         myconnection=DriverManager.getConnection(path+place, user, psw);
         try{
             String a="insert into Bill_table value(?,?,?,?,?)";
            // JOptionPane.showMessageDialog(rootPane,"abceewwwwccc");
             PreparedStatement mystat=myconnection.prepareStatement(a);
             mystat.setString(1,jTextField3.getText());
             mystat.setString(2,jTextField1.getText());
             mystat.setString(3,jTextField2.getText());
             
             
             
          SimpleDateFormat myformat=new SimpleDateFormat("yyyy-MM-dd");
//             mystat.setString(4,myformat.format(jDateChooser1.getDate()));
              
              java.util.Date dataobj=new java.util.Date();
              mystat.setString(4,myformat.format(dataobj));
            
              
              mystat.setString(5,jTextField4.getText());
            
             
             if(mystat.executeUpdate()==1)
             {
                 /*
                  try{
                      DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();
             int l=model.getRowCount();
             
                       for(int h=0;h<l;h++)
             {
             String b="insert into bill_details value(?,?,?,?,?)";
            // JOptionPane.showMessageDialog(rootPane,"abceewwwwccc");
             PreparedStatement mystat1=myconnection.prepareStatement(b);
            mystat.setString(1,jTextField3.getText());
            mystat.setString(2,jComboBox1.getSelectedItem().toString());
            mystat.setString(3,jComboBox2.getSelectedItem().toString());
            mystat.setString(4,jTable1.getValueAt(h, 1));
            mystat.setString(5,jTextField3.getText());
             
            
                 
             }
             
             
                   }
         catch(Exception e){
             JOptionPane.showMessageDialog(rootPane,"Error in query"+e.getMessage());
         }
                 */
                 
                 
                 bill_id=Integer.parseInt(jTextField3.getText());
                 
                 JOptionPane.showMessageDialog(rootPane, "Saved Successfully");
               //  jTextArea1.setText("");
             //    jTextField1.setText("");
                 
//                 jTextField1.setText("");
//                 
//                 jTextField2.setText("");
//                 
//                 jTextField3.setText("");
//                 
                 
             }
             else
             {
                 JOptionPane.showMessageDialog(rootPane, "Error in query");
             }
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(rootPane,"Error in query"+e.getMessage());
         }
         finally{
         myconnection.close();
         
     }
         
         
         
     }   
     catch(Exception e)
     {
         JOptionPane.showMessageDialog(rootPane,"Error in Connection"+e.getMessage());
     }
            
            
            
            
            
        }
            
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        if(jComboBox1.getSelectedIndex()>0){
//            jTextField6.setText(jComboBox1.getSelectedItem().toString());

            try{
                Connection myconnection;

                myconnection=DriverManager.getConnection(path+place, user, psw);
                try{
                    String a="select * from stocktable where company=?";
                    PreparedStatement mystat=myconnection.prepareStatement(a);
                    mystat.setString(1,jComboBox1.getSelectedItem().toString());
                    ResultSet myresult=mystat.executeQuery();

                    // DefaultTableModel mymodel=(DefaultTableModel) jTable1.getModel();

                    // String id,name,post,phone;
                    if(myresult.next()){

                        jComboBox2.removeAllItems();
                        jComboBox2.addItem("Choose Product");
                        do{

                            jComboBox2.addItem(myresult.getString("product"));
                        }
                        while(myresult.next());

                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane,"No product in Stock!...Kindly add first!");
                    }
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(rootPane,"Error in query"+e.getMessage());
                }
                finally{
                    myconnection.close();

                }

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error in Connection"+e.getMessage());
            }

        }
        else
        {
            jComboBox2.removeAllItems();
            jComboBox2.addItem("Choose Product");
          //  jTextField6.setText("");
        }

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        if(jComboBox2.getSelectedIndex()>0)
        {
          //  jTextField7.setText(jComboBox2.getSelectedItem().toString());
            try{
                Connection myconnection;
                myconnection=DriverManager.getConnection(path+place, user, psw);
                try{
                    String a="select * from stocktable where company=? and product=?";
                    PreparedStatement mystat=myconnection.prepareStatement(a);
                    mystat.setString(1,jComboBox1.getSelectedItem().toString());
                    mystat.setString(2,jComboBox2.getSelectedItem().toString());
                    ResultSet myresult=mystat.executeQuery();
                    if(myresult.next()){

                        jComboBox3.removeAllItems();
                        jComboBox3.addItem("Choose Item");
                        do{

                            jComboBox3.addItem(myresult.getString("Name"));
                        }
                        while(myresult.next());
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane,"Nothing in this product!...Kindly add first!");
                    }
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(rootPane,"Error in query"+e.getMessage());
                }
                finally{
                    myconnection.close();

                }

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error in Connection"+e.getMessage());
            }

        }
        else
        {
            jComboBox3.removeAllItems();
            jComboBox3.addItem("Choose Item");
         //   jTextField7.setText("");

        }
    }//GEN-LAST:event_jComboBox5ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        if(jComboBox2.getSelectedIndex()>0)
        {
            //jTextField7.setText(jComboBox2.getSelectedItem().toString());
            try{
                Connection myconnection;
                myconnection=DriverManager.getConnection(path+place, user, psw);
                try{
                    String a="select * from stocktable where company=? and product=?";
                    PreparedStatement mystat=myconnection.prepareStatement(a);
                    mystat.setString(1,jComboBox1.getSelectedItem().toString());
                    mystat.setString(2,jComboBox2.getSelectedItem().toString());
                    ResultSet myresult=mystat.executeQuery();
                    if(myresult.next()){

                        jComboBox3.removeAllItems();
                        jComboBox3.addItem("Choose Item");
                        do{

                            jComboBox3.addItem(myresult.getString("Name"));
                        }
                        while(myresult.next());
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane,"Nothing in this product!...Kindly add first!");
                    }
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(rootPane,"Error in query"+e.getMessage());
                }
                finally{
                    myconnection.close();

                }

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error in Connection"+e.getMessage());
            }

        }
        else
        {
            jComboBox3.removeAllItems();
            jComboBox3.addItem("Choose Item");
           // jTextField7.setText("");

        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
    
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        int a=JOptionPane.YES_NO_OPTION;
        int b=JOptionPane.showConfirmDialog(rootPane,"Do you want to cancel Bill?","Cancel",a);
        if(b==JOptionPane.YES_OPTION)
        {
            
        try{
         Connection myconnection;
         
        
         myconnection=DriverManager.getConnection(path+place, user, psw);
         
   try{
 
       String c="delete from bill_details where bill_id=?";
             PreparedStatement mystat=myconnection.prepareStatement(c);
             mystat.setString(1,jTextField3.getText());
             
             // JOptionPane.showMessageDialog(rootPane,mystat.executeUpdate());
             if(mystat.executeUpdate()>0)
             {  //JOptionPane.showMessageDialog(rootPane,"Bill Cancelled");
                 flag=0;
                   DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();
                   model.setRowCount(0);
                   jTextField3.setText("");
                   jTextField1.setText("");
                   jTextField2.setText("");
                   jTextField4.setText("");
                   jTextField5.setText("");
                   jComboBox1.setSelectedIndex(0);
                   
                   jComboBox2.setSelectedIndex(0);
                   jComboBox3.setSelectedIndex(0);
                 JOptionPane.showMessageDialog(rootPane,"Bill Cancelled");
             }
             
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(rootPane,"Error in query"+e.getMessage());
         }
         finally{
         myconnection.close();
         
     }
    }
         
     
     catch(Exception e)
     {
         JOptionPane.showMessageDialog(rootPane,"Error in Connection"+e.getMessage());
     }}
             
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
    if(flag==0)
    {
       int a=JOptionPane.YES_NO_OPTION;
        int b=JOptionPane.showConfirmDialog(rootPane,"Previous Bill not Saved...Wanna Save?","Warning!",a);
        if(b==JOptionPane.YES_OPTION)
        { 
            
        flag=1;
        
        
        if(jTextField4.getText().equals(""))
        {
//            JOptionPane.showMessageDialog(rootPane,"Calculate Bill First");
                DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();

   int l=model.getRowCount();
   int sum=0;
   for(int h=0;h<l;h++)
   {
       sum+=(Integer.parseInt(jTable1.getValueAt(h, 6).toString()));
   }
   
   jTextField4.setText(Integer.toString(sum));
        }
        {
            
                try{
         Connection myconnection;
         
        
         myconnection=DriverManager.getConnection(path+place, user, psw);
         try{
             String i="insert into Bill_table value(?,?,?,?,?)";
            // JOptionPane.showMessageDialog(rootPane,"abceewwwwccc");
             PreparedStatement mystat=myconnection.prepareStatement(i);
             mystat.setString(1,jTextField3.getText());
             mystat.setString(2,jTextField1.getText());
             mystat.setString(3,jTextField2.getText());
             
             
             
          SimpleDateFormat myformat=new SimpleDateFormat("yyyy-MM-dd");
//             mystat.setString(4,myformat.format(jDateChooser1.getDate()));
              
              java.util.Date dataobj=new java.util.Date();
              mystat.setString(4,myformat.format(dataobj));
            
              
              mystat.setString(5,jTextField4.getText());
            
             
             if(mystat.executeUpdate()==1)
             {
                 /*
                  try{
                      DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();
             int l=model.getRowCount();
             
                       for(int h=0;h<l;h++)
             {
             String b="insert into bill_details value(?,?,?,?,?)";
            // JOptionPane.showMessageDialog(rootPane,"abceewwwwccc");
             PreparedStatement mystat1=myconnection.prepareStatement(b);
            mystat.setString(1,jTextField3.getText());
            mystat.setString(2,jComboBox1.getSelectedItem().toString());
            mystat.setString(3,jComboBox2.getSelectedItem().toString());
            mystat.setString(4,jTable1.getValueAt(h, 1));
            mystat.setString(5,jTextField3.getText());
             
            
                 
             }
             
             
                   }
         catch(Exception e){
             JOptionPane.showMessageDialog(rootPane,"Error in query"+e.getMessage());
         }
                 */
                 
                 
                 
                 
                 JOptionPane.showMessageDialog(rootPane, "Saved Successfully");
               //  jTextArea1.setText("");
             //    jTextField1.setText("");
                 
                 jTextField1.setText("");
                 
                 jTextField2.setText("");
                 
                 jTextField3.setText("");
                 
                 
             }
             else
             {
                 JOptionPane.showMessageDialog(rootPane, "Error in query");
             }
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(rootPane,"Error in query"+e.getMessage());
         }
         finally{
         myconnection.close();
         
     }
         
         
         
     }   
     catch(Exception e)
     {
         JOptionPane.showMessageDialog(rootPane,"Error in Connection"+e.getMessage());
     }
            
            
            
            
            
        }
        }
        
        else{
            try{
         Connection myconnection;
         
        
         myconnection=DriverManager.getConnection(path+place, user, psw);
         
   try{
 
       String c="delete from bill_details where bill_id=?";
             PreparedStatement mystat=myconnection.prepareStatement(c);
             mystat.setString(1,jTextField3.getText());
             
             // JOptionPane.showMessageDialog(rootPane,mystat.executeUpdate());
             if(mystat.executeUpdate()>0)
             {  //JOptionPane.showMessageDialog(rootPane,"Bill Cancelled");
                 flag=0;
//                   DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();
//                   model.setRowCount(0);
//                   jTextField3.setText("");
//                   jTextField1.setText("");
//                   jTextField2.setText("");
//                   jTextField4.setText("");
//                   jTextField5.setText("");
//                   jComboBox1.setSelectedIndex(0);
//                   
//                   jComboBox2.setSelectedIndex(0);
//                   jComboBox3.setSelectedIndex(0);
                 //JOptionPane.showMessageDialog(rootPane,"Bill Cancelled");
             }
             
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(rootPane,"Error in query"+e.getMessage());
         }
         finally{
         myconnection.close();
         
     }
    }
         
     
     catch(Exception e)
     {
         JOptionPane.showMessageDialog(rootPane,"Error in Connection"+e.getMessage());
     }
        }
        
    }                flag=0;
                   DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();
                   model.setRowCount(0);
                   jTextField3.setText("");
                   jTextField1.setText("");
                   jTextField2.setText("");
                   jTextField4.setText("");
                   jTextField5.setText("");
                   jComboBox1.setSelectedIndex(0);
                   
                   jComboBox2.setSelectedIndex(0);
                   jComboBox3.setSelectedIndex(0);

        
        
    
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       
            try{
         Connection myconnection;
         
        
         myconnection=DriverManager.getConnection(path+place, user, psw);
         
             
          DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();
   int[] rows = jTable1.getSelectedRows();
  
     
   try{
  for(int i=0;i<rows.length;i++){
       String a="delete from bill_details where bill_id=? and s_no=?";
             PreparedStatement mystat=myconnection.prepareStatement(a);
             mystat.setString(1,jTextField3.getText());
             
             
             mystat.setString(2,jTable1.getValueAt(rows[i]-i,0).toString());
             mystat.executeUpdate();
  }
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(rootPane,"Error in query"+e.getMessage());
         }
         finally{
         myconnection.close();
         
     }
         
     }   
     catch(Exception e)
     {
         JOptionPane.showMessageDialog(rootPane,"Error in Connection"+e.getMessage());
     }
             
        
         
         
          DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();
   int[] rows = jTable1.getSelectedRows();
   for(int i=0;i<rows.length;i++){
     model.removeRow(rows[i]-i);
   }
   
   
   
   

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        
        bill_print o= new bill_print();
     o.setVisible(true);
     
     
        PrinterJob job = PrinterJob.getPrinterJob();
job.setPrintable(o);
PageFormat myformat=job.defaultPage();
myformat.setOrientation(PageFormat.PORTRAIT);
PageFormat postformat = job.pageDialog(myformat);
if (myformat != postformat) {
boolean ok = job.printDialog();
if (ok) 
{
try {
job.print();
} catch (PrinterException ex) {
/* The job did not successfully complete */
}
}
}
     
    }//GEN-LAST:event_jButton5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox5;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
}
